# this playbook is executed on the controlserver
# ansible-playbook add-node.yml --extra-vars "hostname=clustarr-master-$(uuidgen | md5sum | awk '{print $1}"
# ansible-playbook add-node.yml --extra-vars "hostname=clustarr-worker-$(uuidgen | md5sum | awk '{print $1}')"
---
# create new node
- hosts: proxmox
  remote_user: ansible
  tasks:
    - include_role:
        name: clustarr
        tasks_from: proxmox-create-vm

    - set_fact:
        mac: "{{ vm.mac.net0 | replace(':', '-') | lower }}"

# prepare pxe for node
- hosts: localhost
  connection: local
  tasks:
    - include_role:
        name: clustarr
        tasks_from: pxe-add-config
      vars:
        mac: "{{ hostvars[groups['proxmox'][0]].mac }}"

# start node
- hosts: proxmox
  remote_user: ansible
  tasks:
    - include_role:
        name: clustarr
        tasks_from: proxmox-start-vm

# refresh proxmox inventory to get new node
- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - meta: refresh_inventory

# setup node after installation and reboot
- hosts: "{{ hostname }}"
  remote_user: ansible
  gather_facts: false
  tasks:
    - name: wait for host to become reachable
      wait_for_connection:
        timeout: 1800  # 30 minutes
        sleep: 2

    - name: gathering facts
      setup:

    - include_role:
        name: clustarr
        tasks_from: docker

- import_playbook: group-workers.yml

# add node to kubernetes cluster
- hosts: localhost
  connection: local
  tasks:
    - include_role:
        name: clustarr
        tasks_from: rke-config

    - name: setup cluster
      command: "rke up --config ~/cluster.yml"

    # display cluster pods on all nodes
    - shell: "kubectl get pod -o wide --all-namespaces --kubeconfig ~/kube_config_cluster.yml"
      register: result
    - debug:
        var: result.stdout_lines
